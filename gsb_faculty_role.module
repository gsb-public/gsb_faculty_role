<?php

/**
 * @file
 * Provides custom functionality related to the faculty role.
 */

/**
 * Implements hook_module_implements_alter().
 */
function gsb_faculty_role_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter') {
    // Allow gsb_faculty_role_form_faculty_node_form_alter to run last.
    if (isset($implementations['gsb_faculty_role'])) {
      $group = $implementations['gsb_faculty_role'];
      unset($implementations['gsb_faculty_role']);
      $implementations['gsb_faculty_role'] = $group;
    }
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() node_form.
 */
function gsb_faculty_role_form_node_form_alter(&$form, $form_state) {
  $form['#process'][] = 'gsb_faculty_role_node_form_process';
}

/**
 * Implements hook_form_FORM_ID_alter() faculty_node_form.
 */
function gsb_faculty_role_form_faculty_node_form_alter(&$form, $form_state) {
  if (in_array('Faculty', $GLOBALS['user']->roles)) {
    // This must be attached at the button level because of workbench_moderation.
    $form['actions']['submit']['#submit'][] = 'gsb_faculty_role_faculty_node_form_submit';
  }
}

/**
 * Redirects to the node edit.
 */
function gsb_faculty_role_faculty_node_form_submit(&$form, &$form_state) {
  $form_state['redirect'] = 'node/' . $form_state['node']->nid . '/edit';
}

/**
 * #process callback: Hide elements on the node form.
 */
function gsb_faculty_role_node_form_process($form) {
  if (!user_access('administer nodes')) {
    // Hide the vertical tabs at the bottom of the form.
    $form['additional_settings']['#access'] = FALSE;
    // Hide all elements inside that vertical tab.
    foreach (element_children($form) as $key) {
      if (isset($form[$key]['#group']) && $form[$key]['#group'] == 'additional_settings') {
        $form[$key]['#access'] = FALSE;
      }
    }
  }

  if (in_array('Faculty', $GLOBALS['user']->roles)) {
    // Hide the following fields if the user is in the Faculty role.
    $field_map = array(
      'field_academic_area_unlimited',
      'field_business_insight_topic',
      'field_centers_research_programs',
      'field_company_organization',
      'field_industry',
      'field_region',
    );
    // Hide all of the fields in these groups.
    $groups = array(
      'group_alumni_story',
    );
    foreach ($groups as $group) {
      // Hide this group.
      unset($form['#fieldgroups'][$group], $form['#groups'][$group]);
      if (isset($form['#group_children'])) {
        foreach ($form['#group_children'] as $field_name => $group_name) {
          // If there are fields in this group, add them to the field map.
          if ($group_name == $group && isset($form[$field_name])) {
            $field_map[] = $field_name;
          }
        }
      }
    }
    foreach ($field_map as $field_name) {
      if (isset($form[$field_name])) {
        $form[$field_name]['#access'] = FALSE;
      }
    }

    // Hide all buttons except the 'Publish' button.
    foreach (element_children($form['actions']) as $key) {
      if ($key != 'save_and_publish') {
        $form['actions'][$key]['#access'] = FALSE;
      }
    }
  }
  return $form;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function gsb_faculty_role_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  // If this is a case detail page being viewed by a Faculty user hide the tabs.
  if (in_array('Faculty', $GLOBALS['user']->roles) && $router_item['path'] == 'node/%' && isset($router_item['map'][1]->type) && $router_item['map'][1]->type == 'case') {
    $data['tabs'] = array();
  }
}
